# Form implementation generated from reading ui file 'base_microscope_app_mdi.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from qtpy import QtCore, QtGui, QtWidgets


class Ui_MainWindow(QtWidgets.QMainWindow):

    def setupUi(self, MainWindow: QtWidgets.QMainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1105, 797)
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap("scopefoundry_logo2_1024.png"),
            QtGui.QIcon.Mode.Normal,
            QtGui.QIcon.State.Off,
        )
        MainWindow.setWindowIcon(icon)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.col_splitter = QtWidgets.QSplitter(parent=self.centralwidget)
        self.col_splitter.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.col_splitter.setHandleWidth(20)
        self.col_splitter.setChildrenCollapsible(True)
        self.col_splitter.setObjectName("col_splitter")
        self.quickaccess_scrollArea = QtWidgets.QScrollArea(parent=self.col_splitter)
        self.quickaccess_scrollArea.setMinimumSize(QtCore.QSize(400, 0))
        self.quickaccess_scrollArea.setWidgetResizable(True)
        self.quickaccess_scrollArea.setObjectName("quickaccess_scrollArea")
        self.quickaccess_scrollAreaWidgetContents = QtWidgets.QWidget()
        self.quickaccess_scrollAreaWidgetContents.setGeometry(
            QtCore.QRect(0, 0, 398, 744)
        )
        self.quickaccess_scrollAreaWidgetContents.setObjectName(
            "quickaccess_scrollAreaWidgetContents"
        )
        self.quickaccess_layout = QtWidgets.QVBoxLayout(
            self.quickaccess_scrollAreaWidgetContents
        )
        self.quickaccess_layout.setObjectName("quickaccess_layout")
        self.quickaccess_scrollArea.setWidget(self.quickaccess_scrollAreaWidgetContents)
        self.lq_trees_widget = QtWidgets.QWidget(parent=self.col_splitter)
        self.lq_trees_widget.setMinimumSize(QtCore.QSize(325, 0))
        self.lq_trees_widget.setObjectName("lq_trees_widget")
        self.tree_layout = QtWidgets.QVBoxLayout(self.lq_trees_widget)
        self.tree_layout.setContentsMargins(0, 0, 0, 0)
        self.tree_layout.setObjectName("tree_layout")
        self.mdiArea = QtWidgets.QMdiArea(parent=self.col_splitter)
        self.mdiArea.setViewMode(QtWidgets.QMdiArea.ViewMode.TabbedView)
        self.mdiArea.setDocumentMode(False)
        self.mdiArea.setTabsMovable(True)
        self.mdiArea.setObjectName("mdiArea")
        self.gridLayout_2.addWidget(self.col_splitter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1105, 17))
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAdvanced = QtWidgets.QMenu(parent=self.menubar)
        self.menuAdvanced.setObjectName("menuAdvanced")
        self.menuHelp = QtWidgets.QMenu(parent=self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuWindow = QtWidgets.QMenu(parent=self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_tab_mode = QtGui.QAction(parent=MainWindow)
        self.action_tab_mode.setCheckable(True)
        self.action_tab_mode.setChecked(True)
        self.action_tab_mode.setObjectName("action_tab_mode")
        self.action_set_data_dir = QtGui.QAction(parent=MainWindow)
        self.action_set_data_dir.setEnabled(True)
        self.action_set_data_dir.setObjectName("action_set_data_dir")
        self.action_load_ini = QtGui.QAction(parent=MainWindow)
        self.action_load_ini.setObjectName("action_load_ini")
        self.action_save_ini = QtGui.QAction(parent=MainWindow)
        self.action_save_ini.setObjectName("action_save_ini")
        self.action_about = QtGui.QAction(parent=MainWindow)
        self.action_about.setObjectName("action_about")
        self.action_console = QtGui.QAction(parent=MainWindow)
        self.action_console.setObjectName("action_console")
        self.action_docs = QtGui.QAction(parent=MainWindow)
        self.action_docs.setObjectName("action_docs")
        self.action_log_viewer = QtGui.QAction(parent=MainWindow)
        self.action_log_viewer.setEnabled(True)
        self.action_log_viewer.setObjectName("action_log_viewer")
        self.action_subwindow_mode = QtGui.QAction(parent=MainWindow)
        self.action_subwindow_mode.setCheckable(True)
        self.action_subwindow_mode.setObjectName("action_subwindow_mode")
        self.window_action = QtGui.QAction(parent=MainWindow)
        self.window_action.setCheckable(True)
        self.window_action.setEnabled(True)
        self.window_action.setObjectName("window_action")
        self.tab_action = QtGui.QAction(parent=MainWindow)
        self.tab_action.setCheckable(True)
        self.tab_action.setObjectName("tab_action")
        self.cascade_action = QtGui.QAction(parent=MainWindow)
        self.cascade_action.setObjectName("cascade_action")
        self.tile_action = QtGui.QAction(parent=MainWindow)
        self.tile_action.setObjectName("tile_action")
        self.action_auto_save_ini = QtGui.QAction(parent=MainWindow)
        self.action_auto_save_ini.setObjectName("action_auto_save_ini")
        self.action_save_window_positions = QtGui.QAction(parent=MainWindow)
        self.action_save_window_positions.setObjectName("action_save_window_positions")
        self.action_load_window_positions = QtGui.QAction(parent=MainWindow)
        self.action_load_window_positions.setObjectName("action_load_window_positions")
        self.action_load_last = QtGui.QAction(parent=MainWindow)
        self.action_load_last.setObjectName("action_load_last")
        self.action_load_all_measure_uis = QtGui.QAction(parent=MainWindow)
        self.action_load_all_measure_uis.setObjectName("action_load_all_measure_uis")
        self.action_show_settings = QtGui.QAction(parent=MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap("settings.png"),
            QtGui.QIcon.Mode.Normal,
            QtGui.QIcon.State.Off,
        )
        self.action_show_settings.setIcon(icon1)
        self.action_show_settings.setObjectName("action_show_settings")
        self.action_propose_from_file = QtGui.QAction(parent=MainWindow)
        self.action_propose_from_file.setObjectName("action_propose_from_file")
        self.action_analyze_with_ipynb = QtGui.QAction(parent=MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(
            QtGui.QPixmap("Jupyter_logo.png"),
            QtGui.QIcon.Mode.Normal,
            QtGui.QIcon.State.Off,
        )
        self.action_analyze_with_ipynb.setIcon(icon2)
        self.action_analyze_with_ipynb.setObjectName("action_analyze_with_ipynb")
        self.menuFile.addAction(self.action_set_data_dir)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_load_ini)
        self.menuFile.addAction(self.action_auto_save_ini)
        self.menuFile.addAction(self.action_save_ini)
        self.menuFile.addAction(self.action_load_last)
        self.menuAdvanced.addAction(self.action_console)
        self.menuAdvanced.addAction(self.action_log_viewer)
        self.menuAdvanced.addSeparator()
        self.menuAdvanced.addAction(self.action_show_settings)
        self.menuAdvanced.addAction(self.action_propose_from_file)
        self.menuAdvanced.addAction(self.action_analyze_with_ipynb)
        self.menuHelp.addAction(self.action_docs)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.action_about)
        self.menuWindow.addAction(self.action_save_window_positions)
        self.menuWindow.addAction(self.action_load_window_positions)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.window_action)
        self.menuWindow.addAction(self.tab_action)
        self.menuWindow.addAction(self.cascade_action)
        self.menuWindow.addAction(self.tile_action)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.action_load_all_measure_uis)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAdvanced.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow: QtWidgets.QMainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ScopeFoundry"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuAdvanced.setTitle(_translate("MainWindow", "Advanced"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.action_tab_mode.setText(_translate("MainWindow", "Tab Mode"))
        self.action_tab_mode.setShortcut(_translate("MainWindow", "Alt+T"))
        self.action_set_data_dir.setText(
            _translate("MainWindow", "Set Data Save Directory ...")
        )
        self.action_set_data_dir.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.action_load_ini.setText(_translate("MainWindow", "&Load Settings ..."))
        self.action_load_ini.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_save_ini.setText(_translate("MainWindow", "&Save Settings As ..."))
        self.action_save_ini.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_about.setText(_translate("MainWindow", "&About"))
        self.action_console.setText(_translate("MainWindow", "&Console "))
        self.action_console.setShortcut(_translate("MainWindow", "Alt+C"))
        self.action_docs.setText(_translate("MainWindow", "ScopeFoundry Docs"))
        self.action_docs.setShortcut(_translate("MainWindow", "Alt+F"))
        self.action_log_viewer.setText(_translate("MainWindow", "Log Viewer"))
        self.action_log_viewer.setShortcut(_translate("MainWindow", "Alt+L"))
        self.action_subwindow_mode.setText(_translate("MainWindow", "Subwindow Mode"))
        self.window_action.setText(_translate("MainWindow", "Sub&window Mode"))
        self.window_action.setShortcut(_translate("MainWindow", "Alt+W"))
        self.tab_action.setText(_translate("MainWindow", "&Tab Mode"))
        self.tab_action.setShortcut(_translate("MainWindow", "Alt+T"))
        self.cascade_action.setText(_translate("MainWindow", "Cascade"))
        self.tile_action.setText(_translate("MainWindow", "Tile"))
        self.action_auto_save_ini.setText(_translate("MainWindow", "Save Settings"))
        self.action_auto_save_ini.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_save_window_positions.setText(
            _translate("MainWindow", "Save Window Positions ...")
        )
        self.action_load_window_positions.setText(
            _translate("MainWindow", "Load Window Positions ...")
        )
        self.action_load_last.setText(_translate("MainWindow", "Load last Settings"))
        self.action_load_all_measure_uis.setText(_translate("MainWindow", "load"))
        self.action_show_settings.setText(_translate("MainWindow", "Settings"))
        self.action_propose_from_file.setText(_translate("MainWindow", "Inspect file"))
        self.action_analyze_with_ipynb.setText(
            _translate("MainWindow", "analyze with ipynb")
        )
